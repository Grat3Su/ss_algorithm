package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;
/* 데이터셋
 * K - 2^k 배열
 * Arr
 * H - 구멍위치
2
R D D R
3
 */

public class BOJ_20187_paper {

	static int[][] ans;
	static int size,K;
	Queue<Character> queue = new ArrayDeque<>();
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		K = Integer.parseInt(br.readLine());
		
		size = (int) Math.pow(2,K);
		ans = new int[size][size];
		StringTokenizer st = new StringTokenizer(br.readLine());
		for(int i = 0; i<(2*K); i++) {
			queue.offer(st.nextToken().charAt(0));
		}
		int[] cur = {0,0};//x,y 
		
		

	}
	
	static void fold(int[] cur) {
		for(int i = 0; i<queue.size(); i++) {
			char c =queue.poll(); 
			switch (c) {
			case 'L':
				
				break;
			case 'R':
				size/=2;
				cur[0]+=size;
				break;
			case 'D':
				size/=2;
				cur[1]+=size;
				break;
			case 'U':
				
				break;

			default:
				break;
			}
			
		}
	}

}
