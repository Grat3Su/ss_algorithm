package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;
/* 데이터셋 - 정점 갯수 | 간선 갯수 | 탐색을 시작할 번호
4 5 1
1 2
1 3
1 4
2 4
3 4
 */

public class BOJ_1260_DFSBFS {
	
	static int N,M,V;
	static int[][] adjMatrix;
	static StringBuilder sb = new StringBuilder();

	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		V = Integer.parseInt(st.nextToken());
		
		adjMatrix = new int[N][N];
		st = new StringTokenizer(br.readLine());
		for(int i = 0; i<N; i++) {
			int to = Integer.parseInt(st.nextToken()); 
			int from = Integer.parseInt(st.nextToken());
			
			adjMatrix[to][from] = adjMatrix[from][to] = 1; 
		}
		
		System.out.println();
		
	}
	
	static void dfs(int idx) {
		Queue<Integer> queue = new ArrayDeque<>();
		int curTo=0;
		int curFrom=0;
		for(int i = idx+1; i<N; i++) {
			if(adjMatrix[idx][i] == 1) {
				
			}
		}
	}
	static void bfs() {//
		
	}

}
