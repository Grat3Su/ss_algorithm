package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BOJ_2961_doyoungscook {
	static int N;
	static int[] S; 
	static int[] B; 
	public static void main(String[] args) throws IOException{
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(bf.readLine());
		int N = Integer.parseInt(st.nextToken());
		int[] S = new int[N]; 
		int[] B = new int[N]; 
		for(int i = 0; i<N; i++) {
			st = new StringTokenizer(bf.readLine());
			S[i] = Integer.parseInt(st.nextToken());
			B[i] = Integer.parseInt(st.nextToken());
		}
		int subsetCnt = 1<<N;
		int smul = 1;
		int badd = 0;
		int min = 9999;
		for(int i = 0; i<N; i++) {
			for(int j = 0; j<subsetCnt; j++) {
				if((i&1<<j)!=0) {
					smul*=S[j];
					badd+=B[j];
					System.out.println(Arrays.toString(S));
					System.out.println(Arrays.toString(B));
					int result = smul+badd;
					result = (result<0?result*-1:result);
					if(min>result)
						min = result;
						
				}
			}
		}
		System.out.println(min);
	}
	
	static void subSet(int idx, int mask) {
		
	}

}
