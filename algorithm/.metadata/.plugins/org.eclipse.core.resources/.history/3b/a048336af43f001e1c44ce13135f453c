package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

/* 수빈이가 동생을 찾는 최소 경우
 * [X+1][X-1][X*2] -> 세 가지 경우
 * 데이터셋
 * N수빈 위치  K동생 위치
 * 5 17
 */
public class BOJ_1697_HidenSeek {
	static int N,K, min;
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		min = Integer.MAX_VALUE;
		bfs(N);
		
	}
	
	static void bfs(int v) {
		Queue<Integer> queue = new ArrayDeque<>();
		queue.offer(v);
		int cnt = 0;
		while(!queue.isEmpty()) {
			int x = queue.poll();
			if(N==K) {
				break;
				
			}
		}
	}

}
