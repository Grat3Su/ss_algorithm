package BOJ.offline0830;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

//bfs
//K<- 몇 번 사용했는지, visit 추가 관리
public class BOJ_1600_monkey {
	static int K,W,H;
	static int[][] map;
	static boolean[][][] visit;//k가 추가됨
	
	//상하좌우
	static int[] dy = {-1,1,0,0};
	static int[] dx = {0,0,-1,1};
	
	//격자 말
	static int[] hdy = {-2, -2, -1, -1, 2,  2, 1,  1};
	static int[] hdx = { 1, -1,  2, -2, 1, -1, 2, -2};
	
	//큐
	static Queue<Node> queue = new ArrayDeque<>();
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		K = Integer.parseInt(br.readLine());
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		W = Integer.parseInt(st.nextToken());
		H = Integer.parseInt(st.nextToken());
		
		map = new int[H][W];
		visit = new boolean[H][W][K+1];
		
		for(int i = 0; i<H; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j<W; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}

	}
	static class Node{
	int y,x,k,d;

	public Node(int y, int x, int k, int d) {
		super();
		this.y = y;
		this.x = x;
		this.k = k;
		this.d = d;
	}	
	}
}
