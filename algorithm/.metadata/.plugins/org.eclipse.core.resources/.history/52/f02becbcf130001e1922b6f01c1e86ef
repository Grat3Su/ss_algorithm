package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BOJ_2798_BlackJack {
	static int[] src;
	static int tgt;
	static int index;
	static int N;//배열 크기
	static int M;//비교할 수
	static int result = 0;
	static StringBuilder sb = new StringBuilder();
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		index = 0;
		src = new int[N];
		tgt = 0;
		st = new StringTokenizer(br.readLine());

		for(int i = 0; i<N; i++)
		{
			src[i] = Integer.parseInt(st.nextToken());
		}
		
		System.out.println(Arrays.toString(src));
	}
	
	static void comb(int start, int tgtidx) {
		if(tgtidx > 3)
		{
			if(result < tgt) {
				result = tgt;				
			}
			return;
		}
		
		if(start > N) {
			return;
		}
		
		tgt += src[start];
		
		result += start;
		comb(start+1,tgtidx+1);
		comb(start+1,tgtidx);
	}

}
