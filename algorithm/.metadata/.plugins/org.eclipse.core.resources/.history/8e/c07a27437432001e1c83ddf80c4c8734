package basic.stackqueue;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Queue;
import java.util.Stack;

public class StackQueueTest2 {

	public static void main(String[] args) {
		//stack
		//push-pop
		
		long start = System.nanoTime();
		Stack<Integer> stack = new Stack<>();
		
		for(int i = 0; i<1000; i++) {
		stack.push(i);
		}
		while(!stack.isEmpty()) {
			stack.pop();
		}		
		Deque<Integer> stackAd =  new ArrayDeque<>(); 
		for(int i = 0; i<1000; i++) {
			stackAd.push(i);
		}
		while(!stackAd.isEmpty()) {
			stackAd.pop();
		}	
		
		long end = System.nanoTime();
		System.out.println(end-start);
		
//		stackAd.push(3);
//		stackAd.push(5);
//		stackAd.push(2);
//		stackAd.push(7);
//		while(!stackAd.isEmpty()) {
//			System.out.print(stackAd.pop()+" ");
//		}System.out.println();
//		
//		Queue<Integer> queueAd =  new ArrayDeque<>(); 
//		
//		queueAd.offer(3);
//		queueAd.offer(5);
//		queueAd.offer(2);
//		stack.peek();
//		queueAd.offer(7);
//		while(!queueAd.isEmpty()) {
//			System.out.print(queueAd.poll()+" ");
//		}
//		System.out.println();
	}

}
