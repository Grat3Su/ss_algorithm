package sw.offline0824;
import java.util.*;
import java.io.*;
/*Edge = (E* L^2)
 * 테스트 케이스
 * T
 * N
 * X X
 * Y Y
 * E
 * 10
2
0 0
0 100
1.0
4
0 0 400 400
0 100 0 100
1.0
6
0 0 400 400 1000 2000
0 100 0 100 600 2000
0.3
9
567 5 45674 24 797 29 0 0 0
345352 5464 145346 54764 5875 0 3453 4545 123
0.0005
 */
//좌표들이 크니까 
//비용계산 생각
//결과값도 크다
//크루스칼 프리마 모두 써서 풀어보기
public class SW_1251_Island {
	static int N, E, island[][],tgt[];
	static long[] edge;
	static boolean[] visit;
	
	static class Vertex{
		int n, int weight;
	}
	
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		
		for(int t = 0; t<T; t++) {
			N = Integer.parseInt(br.readLine());
			
			island = new int[N][2];
			edge = new long[N-1];
			visit = new boolean[N];//방문 여부
			tgt = new int[2];//가져올 정점 인덱스
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int i = 0; i<N; i++) {//x
				island[i][0] =Integer.parseInt(st.nextToken()); 
			}
			for(int i = 0; i<N; i++) {//y
				island[i][1] =Integer.parseInt(st.nextToken()); 
			}
			
			for(int i = 0; i<N; i++) {
				for(int j = 0; j<N; j++) {
					
				}
			}
		}
		
	}
	
	static void comb(int srcIdx, int tgtIdx) {
		if(tgtIdx == 2) {
			edge[]
			return;
		}
	}

}
