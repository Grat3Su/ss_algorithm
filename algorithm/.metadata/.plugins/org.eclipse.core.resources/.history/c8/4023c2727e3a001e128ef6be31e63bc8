package BOJ;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;
//bottom up 방식
public class BOJ_1992_QuadTree3 {
/* 데이터셋
8
11110000
11110000
00011100
00011100
11110000
11110000
11110011
11110011
 */
	static char[][] map;
	static int N;
	//static StringBuilder sb = new StringBuilder();

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
		map = new char[N][];

		for (int i = 0; i < N; i++) {
			// StringTokenizer st = new StringTokenizer(br.readLine());

			String s = br.readLine();
			map[i] = s.toCharArray();

		}
		divide(0, 0, N);
		System.out.println(sb);
	}

	static String divide(int y, int x, int n) {// 맨 밑에서부터 문자열을 만든다.
		if(n == 1)
			return String.valueOf(map[y][x]);// 이 좌표에 있는걸 문자열로. 기저조건
		if (!check(y, x, n)) {
			int half = n / 2;
			// 4분할
			divide(y, x, half);
			divide(y, x + half, half);
			divide(y + half, x, half);
			divide(y + half, x + half, half);
		}

	}
}
