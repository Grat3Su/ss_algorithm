package hw;
import java.util.*;
import java.io.*;
public class BOJ_10971_외판원순회2 {
	static int N;
	static int[][] map;
	static long min;
	static boolean[] visit;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());

		//초기화
		map = new int[N][N];
		visit = new boolean[N];
		min = Integer.MAX_VALUE;
		
		for(int i = 0; i<N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int j = 0; j<N; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		visit[0] = true;
		dfs(0, 0);
		System.out.println(min);
	}
	
	static boolean isChecked() {
		for(int i = 0; i<N; i++) {
			if(!visit[i])	return false;
		}
		return true;
	}
	
	static void dfs(int idx, long cnt) {		
		if(!isChecked()) {
			if(map[idx][0]!=0) {
				min = Math.min(min, cnt+map[idx][0]);
			}
		}
		for(int i = 1; i<=N; i++) {
			if(!visit[i]&&map[idx][i]!=0) {
				visit[i] = true;
				dfs(idx, cnt+map[idx][i]);
				visit[i] = false;
			}
		}
	}

}
